/**
 * This class is generated by jOOQ
 */
package com.lanzonprojects.omsapi.jooq.generated.tables;


import com.lanzonprojects.omsapi.jooq.generated.DogboxOms;
import com.lanzonprojects.omsapi.jooq.generated.Keys;
import com.lanzonprojects.omsapi.jooq.generated.tables.records.NutritionalInformationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NutritionalInformation extends TableImpl<NutritionalInformationRecord> {

	private static final long serialVersionUID = -1149090502;

	/**
	 * The reference instance of <code>dogbox_oms.nutritional_information</code>
	 */
	public static final NutritionalInformation NUTRITIONAL_INFORMATION = new NutritionalInformation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NutritionalInformationRecord> getRecordType() {
		return NutritionalInformationRecord.class;
	}

	/**
	 * The column <code>dogbox_oms.nutritional_information.id</code>.
	 */
	public final TableField<NutritionalInformationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.kcal_per_hundred</code>.
	 */
	public final TableField<NutritionalInformationRecord, String> KCAL_PER_HUNDRED = createField("kcal_per_hundred", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.percentage_meat</code>.
	 */
	public final TableField<NutritionalInformationRecord, String> PERCENTAGE_MEAT = createField("percentage_meat", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.percentage_protein</code>.
	 */
	public final TableField<NutritionalInformationRecord, String> PERCENTAGE_PROTEIN = createField("percentage_protein", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.percentage_fat</code>.
	 */
	public final TableField<NutritionalInformationRecord, String> PERCENTAGE_FAT = createField("percentage_fat", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.percentage_carbs</code>.
	 */
	public final TableField<NutritionalInformationRecord, String> PERCENTAGE_CARBS = createField("percentage_carbs", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.product_id</code>.
	 */
	public final TableField<NutritionalInformationRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.nutritional_information.ingredient_id</code>.
	 */
	public final TableField<NutritionalInformationRecord, Integer> INGREDIENT_ID = createField("ingredient_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>dogbox_oms.nutritional_information</code> table reference
	 */
	public NutritionalInformation() {
		this("nutritional_information", null);
	}

	/**
	 * Create an aliased <code>dogbox_oms.nutritional_information</code> table reference
	 */
	public NutritionalInformation(String alias) {
		this(alias, NUTRITIONAL_INFORMATION);
	}

	private NutritionalInformation(String alias, Table<NutritionalInformationRecord> aliased) {
		this(alias, aliased, null);
	}

	private NutritionalInformation(String alias, Table<NutritionalInformationRecord> aliased, Field<?>[] parameters) {
		super(alias, DogboxOms.DOGBOX_OMS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NutritionalInformationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NUTRITIONAL_INFORMATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NutritionalInformationRecord> getPrimaryKey() {
		return Keys.KEY_NUTRITIONAL_INFORMATION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NutritionalInformationRecord>> getKeys() {
		return Arrays.<UniqueKey<NutritionalInformationRecord>>asList(Keys.KEY_NUTRITIONAL_INFORMATION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<NutritionalInformationRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<NutritionalInformationRecord, ?>>asList(Keys.FK_NUTRITIONAL_INFO_PRODUCT, Keys.FK_NUTRITIONAL_INFO_INGREDIENT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NutritionalInformation as(String alias) {
		return new NutritionalInformation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NutritionalInformation rename(String name) {
		return new NutritionalInformation(name, null);
	}
}
