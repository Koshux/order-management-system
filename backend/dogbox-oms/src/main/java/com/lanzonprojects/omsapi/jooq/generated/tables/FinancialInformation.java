/**
 * This class is generated by jOOQ
 */
package com.lanzonprojects.omsapi.jooq.generated.tables;


import com.lanzonprojects.omsapi.jooq.generated.DogboxOms;
import com.lanzonprojects.omsapi.jooq.generated.Keys;
import com.lanzonprojects.omsapi.jooq.generated.tables.records.FinancialInformationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FinancialInformation extends TableImpl<FinancialInformationRecord> {

	private static final long serialVersionUID = -967319175;

	/**
	 * The reference instance of <code>dogbox_oms.financial_information</code>
	 */
	public static final FinancialInformation FINANCIAL_INFORMATION = new FinancialInformation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FinancialInformationRecord> getRecordType() {
		return FinancialInformationRecord.class;
	}

	/**
	 * The column <code>dogbox_oms.financial_information.id</code>.
	 */
	public final TableField<FinancialInformationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.is_vat_used</code>.
	 */
	public final TableField<FinancialInformationRecord, Byte> IS_VAT_USED = createField("is_vat_used", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.rrp</code>.
	 */
	public final TableField<FinancialInformationRecord, String> RRP = createField("rrp", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.profit</code>.
	 */
	public final TableField<FinancialInformationRecord, String> PROFIT = createField("profit", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.purchase_price</code>.
	 */
	public final TableField<FinancialInformationRecord, String> PURCHASE_PRICE = createField("purchase_price", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.vat_value</code>.
	 */
	public final TableField<FinancialInformationRecord, String> VAT_VALUE = createField("vat_value", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.vat_refund</code>.
	 */
	public final TableField<FinancialInformationRecord, String> VAT_REFUND = createField("vat_refund", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.vat_adjusted_cogs</code>.
	 */
	public final TableField<FinancialInformationRecord, String> VAT_ADJUSTED_COGS = createField("vat_adjusted_cogs", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.financial_information.product_id</code>.
	 */
	public final TableField<FinancialInformationRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>dogbox_oms.financial_information</code> table reference
	 */
	public FinancialInformation() {
		this("financial_information", null);
	}

	/**
	 * Create an aliased <code>dogbox_oms.financial_information</code> table reference
	 */
	public FinancialInformation(String alias) {
		this(alias, FINANCIAL_INFORMATION);
	}

	private FinancialInformation(String alias, Table<FinancialInformationRecord> aliased) {
		this(alias, aliased, null);
	}

	private FinancialInformation(String alias, Table<FinancialInformationRecord> aliased, Field<?>[] parameters) {
		super(alias, DogboxOms.DOGBOX_OMS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<FinancialInformationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_FINANCIAL_INFORMATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<FinancialInformationRecord> getPrimaryKey() {
		return Keys.KEY_FINANCIAL_INFORMATION_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<FinancialInformationRecord>> getKeys() {
		return Arrays.<UniqueKey<FinancialInformationRecord>>asList(Keys.KEY_FINANCIAL_INFORMATION_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<FinancialInformationRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<FinancialInformationRecord, ?>>asList(Keys.FK_FINANCIAL_INFO_PRODUCT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FinancialInformation as(String alias) {
		return new FinancialInformation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public FinancialInformation rename(String name) {
		return new FinancialInformation(name, null);
	}
}
