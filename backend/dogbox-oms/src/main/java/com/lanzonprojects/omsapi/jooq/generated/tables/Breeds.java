/**
 * This class is generated by jOOQ
 */
package com.lanzonprojects.omsapi.jooq.generated.tables;


import com.lanzonprojects.omsapi.jooq.generated.DogboxOms;
import com.lanzonprojects.omsapi.jooq.generated.Keys;
import com.lanzonprojects.omsapi.jooq.generated.tables.records.BreedsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Breeds extends TableImpl<BreedsRecord> {

	private static final long serialVersionUID = 331020870;

	/**
	 * The reference instance of <code>dogbox_oms.breeds</code>
	 */
	public static final Breeds BREEDS = new Breeds();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BreedsRecord> getRecordType() {
		return BreedsRecord.class;
	}

	/**
	 * The column <code>dogbox_oms.breeds.id</code>.
	 */
	public final TableField<BreedsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.breeds.NAME</code>.
	 */
	public final TableField<BreedsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.breeds.size_id</code>.
	 */
	public final TableField<BreedsRecord, Integer> SIZE_ID = createField("size_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>dogbox_oms.breeds</code> table reference
	 */
	public Breeds() {
		this("breeds", null);
	}

	/**
	 * Create an aliased <code>dogbox_oms.breeds</code> table reference
	 */
	public Breeds(String alias) {
		this(alias, BREEDS);
	}

	private Breeds(String alias, Table<BreedsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Breeds(String alias, Table<BreedsRecord> aliased, Field<?>[] parameters) {
		super(alias, DogboxOms.DOGBOX_OMS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BreedsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BREEDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BreedsRecord> getPrimaryKey() {
		return Keys.KEY_BREEDS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BreedsRecord>> getKeys() {
		return Arrays.<UniqueKey<BreedsRecord>>asList(Keys.KEY_BREEDS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BreedsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BreedsRecord, ?>>asList(Keys.FK_BREEDS_SIZE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Breeds as(String alias) {
		return new Breeds(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Breeds rename(String name) {
		return new Breeds(name, null);
	}
}
