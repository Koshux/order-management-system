/**
 * This class is generated by jOOQ
 */
package com.lanzonprojects.omsapi.jooq.generated.tables;


import com.lanzonprojects.omsapi.jooq.generated.DogboxOms;
import com.lanzonprojects.omsapi.jooq.generated.Keys;
import com.lanzonprojects.omsapi.jooq.generated.tables.records.CustomersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customers extends TableImpl<CustomersRecord> {

	private static final long serialVersionUID = 267019311;

	/**
	 * The reference instance of <code>dogbox_oms.customers</code>
	 */
	public static final Customers CUSTOMERS = new Customers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CustomersRecord> getRecordType() {
		return CustomersRecord.class;
	}

	/**
	 * The column <code>dogbox_oms.customers.id</code>.
	 */
	public final TableField<CustomersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.creation_date</code>.
	 */
	public final TableField<CustomersRecord, Timestamp> CREATION_DATE = createField("creation_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.NAME</code>.
	 */
	public final TableField<CustomersRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.phone_number</code>.
	 */
	public final TableField<CustomersRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.VARCHAR.length(12).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.house_name</code>.
	 */
	public final TableField<CustomersRecord, String> HOUSE_NAME = createField("house_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.addr_line_1</code>.
	 */
	public final TableField<CustomersRecord, String> ADDR_LINE_1 = createField("addr_line_1", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.addr_line_2</code>.
	 */
	public final TableField<CustomersRecord, String> ADDR_LINE_2 = createField("addr_line_2", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.addr_line_3</code>.
	 */
	public final TableField<CustomersRecord, String> ADDR_LINE_3 = createField("addr_line_3", org.jooq.impl.SQLDataType.VARCHAR.length(35).nullable(false), this, "");

	/**
	 * The column <code>dogbox_oms.customers.post_code</code>.
	 */
	public final TableField<CustomersRecord, String> POST_CODE = createField("post_code", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * Create a <code>dogbox_oms.customers</code> table reference
	 */
	public Customers() {
		this("customers", null);
	}

	/**
	 * Create an aliased <code>dogbox_oms.customers</code> table reference
	 */
	public Customers(String alias) {
		this(alias, CUSTOMERS);
	}

	private Customers(String alias, Table<CustomersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Customers(String alias, Table<CustomersRecord> aliased, Field<?>[] parameters) {
		super(alias, DogboxOms.DOGBOX_OMS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CustomersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CUSTOMERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CustomersRecord> getPrimaryKey() {
		return Keys.KEY_CUSTOMERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CustomersRecord>> getKeys() {
		return Arrays.<UniqueKey<CustomersRecord>>asList(Keys.KEY_CUSTOMERS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Customers as(String alias) {
		return new Customers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Customers rename(String name) {
		return new Customers(name, null);
	}
}
